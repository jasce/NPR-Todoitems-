---
swagger: "2.0"
info:
  description: "This is a todolist server created for Use Dipper Assignment." 
  version: "1.0.0"
  title: "NodeJs + Swagger To Do List Application"  
  contact:
    email: "jascee.gtbit@gmail.com"  
host: "use-dipper-assignment.herokuapp.com"
basePath: "/v2"
responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
tags:
- name: "TodoItems"
  description: "Everything about your TodoItems"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "User"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /todoitems:
    post:
      tags:
      - "TodoItems"
      summary: "Add a new todoItem "
      description: ""
      operationId: "addTodoItem"      
      parameters:
      - in: "body"
        name: "body"
        description: "TodoItem object that needs to be added to the list"
        required: true     
        schema:
          $ref: "#/definitions/body"
      - name: authorization
        in: header
        description: an authorization header
        required: true
        type: string
      security:
      - BasicAuth: []
      responses:
        405:
          description: "Invalid input"
        401:
          $ref: "#/responses/UnauthorizedError"
      
      x-swagger-router-controller: "TodoItems"
  /todoitems/findByStatus:
    get:
      tags:
      - "TodoItems"
      summary: "Finds TodoItems by status"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findTodoItemsByStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: true
        type: "array"
        items:
          type: "string"
          default: "available"
          enum:
          - "completed"
          - "pending"
        collectionFormat: "multi"
      - name: authorization
        in: header
        description: an authorization header
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
        400:
          description: "Invalid status value"
        401:
          $ref: "#/responses/UnauthorizedError"
      security:
      - BasicAuth: []
      x-swagger-router-controller: "TodoItems"
  /todoitem/{todoItemId}:
    get:
      tags:
      - "TodoItems"
      summary: "Find TodoItem by ID"
      description: "Returns a single todoitem"
      operationId: "getTodoItemById"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "todoItemId"
        in: "path"
        description: "ID of todoitem to return"
        required: true
        type: "integer"
        format: "int64"
      - name: authorization
        in: header
        description: an authorization header
        required: true
        type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200"
        400:
          description: "Invalid ID supplied"
        404:
          description: "TodoItem not found"
        401:
          $ref: "#/responses/UnauthorizedError"
      security:
      - BasicAuth: []
      x-swagger-router-controller: "TodoItems"
    post:
      tags:
      - "TodoItems"
      summary: "Updates a todoitem in the list"
      description: ""
      operationId: "updateTodoWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "todoItemId"
        in: "path"
        description: "ID of todoItem that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the todoItem"
        required: false
        type: "string"
      - name: "status"
        in: "formData"
        description: "Updated status of the todoItem"
        required: false
        type: "string"
      - name: "due_date"
        in: "formData"
        description: "Updated status of the todoItem"
        required: false          
        type: "string"
        format: "date"
      - name: authorization
        in: header
        description: an authorization header
        required: true
        type: string
      responses:
        405:
          description: "Invalid input"
        401:
          $ref: "#/responses/UnauthorizedError"
      security:
      - BasicAuth: []
      x-swagger-router-controller: "TodoItems"
    delete:
      tags:
      - "TodoItems"
      summary: "Deletes a todoItem"
      description: ""
      operationId: "deletetodoItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:      
      - name: "todoItemId"
        in: "path"
        description: "TodoItem id to delete"
        required: true
        type: "integer"
        format: "int64"
      - name: authorization
        in: header
        description: an authorization header
        required: true
        type: string
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "TodoItem not found"
        401:
          $ref: "#/responses/UnauthorizedError"
      security:
      - BasicAuth: []
      x-swagger-router-controller: "TodoItems"
  /user:
    post:
      tags:
      - "User"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/body_1"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"
  /user/login:
    post:
      tags:
      - "User"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The user details for login"
        required: true
        schema:
          $ref: "#/definitions/body_2"            
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid username/password supplied"
      x-swagger-router-controller: "User"
  /user/logout:
    get:
      tags:
      - "User"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"
securityDefinitions:
  BasicAuth:
    type: "basic"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      Name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  TodoItem:
    type: "object"
    required:
    - "description"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Learn Java"
      status:
        type: "string"
        description: "Status of TodoItems"
        enum:
        - "completed"
        - "pending"
      description:
        type: "string"
      due_date:
        type: "string"
        format: "date"
  body:
    type: "object"
    required:
    - "description"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Learn Java"
      status:
        type: "string"
        description: "Status of TodoItems"
        enum:
        - "completed"
        - "pending"
      description:
        type: "string"
      due_date:
        type: "string"
        format: "date"
  inline_response_200:
    required:
    - "description"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Learn Java"
      status:
        type: "string"
        description: "Status of TodoItems"
        enum:
        - "completed"
        - "pending"
      description:
        type: "string"
      due_date:
        type: "string"
        format: "date"
  body_1:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      Name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  body_2:
    type: "object"
    properties:      
      email:
        type: "string"
        example: "string@gmail.com"
      password:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
